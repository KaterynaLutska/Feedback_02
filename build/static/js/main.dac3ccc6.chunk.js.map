{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.jsx","components/Feedback/Statistics/Statistics.jsx","components/Feedback/FeedbackOptions/FeedbackOptions.jsx","components/Feedback/Section/Section.jsx","components/Feedback/Notification/Notification.jsx","components/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","Statistics","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","FeedbackOptions","options","onLeaveFeedback","buttons","Object","keys","map","button","type","onClick","Section","title","Notification","message","Feedback","state","event","target","textContent","setState","prevent","toLowerCase","values","reduce","akk","value","badVoice","totalVoice","Math","round","this","goodRate","Component","propTypes","PropTypes","string","isRequired","object","func","number","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dac3ccc6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","import './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className=\"Container\">{children}</div>;\n};\n\nexport default Container;\n","const Statistics = ({\n  good,\n  neutral,\n  bad,\n  countTotalFeedback,\n  countPositiveFeedbackPercentage,\n}) => {\n  return (\n    <div>\n      <h1></h1>\n      <p className=\"statistic\">Все чудово:{good}</p>\n      <p className=\"statistic\">Добре:{neutral}</p>\n      <p className=\"statistic\">Погано: {bad}</p>\n      <p className=\"statistic\">Усі відгуки:{countTotalFeedback} </p>\n      <p className=\"statistic\">\n        Лише позитивні:\n        {countPositiveFeedbackPercentage}%\n      </p>\n    </div>\n  );\n};\n\nexport default Statistics;\n","const FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const buttons = Object.keys(options);\n\n  return (\n    <div className=\"button-wrap\">\n      {buttons.map(button => (\n        <button key={button} type=\"button\" onClick={onLeaveFeedback}>\n          {button}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n","const Section = ({ title, children }) => {\n  return (\n    <section>\n      <h1 className=\"Statistics_title \">{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","const Notification = ({ message }) => {\n  return <p className=\"statistic notification\">{message}</p>;\n};\n\nexport default Notification;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Feedback.css';\n\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport Section from './Section';\nimport Notification from './Notification';\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = event => {\n    const target = event.target.textContent;\n    this.setState(prevent => ({\n      ...{ [target.toLowerCase()]: prevent[target.toLowerCase()] + 1 },\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const value = Object.values(this.state);\n    const totalVoice = value.reduce((akk, value) => akk + value, 0);\n    return totalVoice;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    let positivePercentage = 0;\n    const badVoice = this.state.bad;\n    const totalVoice = this.countTotalFeedback();\n    positivePercentage = Math.round(\n      ((totalVoice - badVoice) / totalVoice) * 100,\n    );\n    return positivePercentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalVoice = this.countTotalFeedback();\n    const goodRate = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {totalVoice >= 1 && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              countTotalFeedback={totalVoice}\n              countPositiveFeedbackPercentage={goodRate}\n            />\n          )}\n        </Section>\n        {totalVoice === 0 && <Notification message=\"No feedback given\" />}\n      </div>\n    );\n  }\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nFeedbackOptions.propTypes = {\n  state: PropTypes.object,\n  onLeaveFeedback: PropTypes.func,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  totalVoice: PropTypes.number,\n  goodRate: PropTypes.number,\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\nexport default Feedback;\n","import './App.css';\n\nimport { Component } from 'react';\n\nimport Container from './components/Container';\nimport Feedback from './components/Feedback';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Feedback />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}